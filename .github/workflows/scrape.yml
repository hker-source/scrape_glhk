name: Run Playwright Scraper and Post to n8n

on:
  workflow_dispatch:
    inputs:
      product_codes:
        description: "List of product codes as JSON array"
        required: true
        default: '["13699"]'

jobs:
  scrape:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps (and Playwright)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers and OS deps
        # This downloads browser binaries and installs OS dependencies on the runner.
        run: |
          # Use python -m playwright to ensure the correct Python environment is used.
          python -m playwright install --with-deps chromium
          # show installed browsers for debugging
          python -m playwright --version || true

      - name: Run scraper
        env:
          PRODUCT_CODES: ${{ github.event.inputs.product_codes }}
        run: |
          echo "PRODUCT_CODES=${PRODUCT_CODES}"
          python scrape_greenlight.py

      - name: Debug workspace (show files)
        run: |
          echo "PWD: $(pwd)"
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          ls -la

      - name: Create zip and upload to n8n (only if outputs exist)
        env:
          N8N_WEBHOOK_URL: ${{ secrets.N8N_WEBHOOK_URL }}
        run: |
          set -euo pipefail

          if [ -d scraped_pages ]; then
            echo "Found scraped_pages/ — creating output.zip"
            zip -r output.zip scraped_pages
          elif compgen -G "output_*.html" > /dev/null; then
            echo "Found output_*.html — creating output.zip"
            zip output.zip output_*.html
          else
            echo "ERROR: nothing to zip (no scraped_pages/ and no output_*.html)"
            ls -la
            exit 1
          fi

          echo "Uploading output.zip to n8n..."
          curl -v -X POST \
            -H "Content-Type: multipart/form-data" \
            -F "file=@output.zip" \
            -F "product_codes=${{ github.event.inputs.product_codes }}" \
            "${N8N_WEBHOOK_URL}"

      - name: Upload artifacts (safe fallback)
        uses: actions/upload-artifact@v4
        with:
          name: scraped-outputs
          path: |
            output.zip
            output_*.html
            scraped_pages/**
